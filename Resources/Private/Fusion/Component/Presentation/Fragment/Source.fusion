prototype(Carbon.Image:Component.Fragment.Source) < prototype(Neos.Fusion:Component) {
    lazy = null

    imageSource = null
    type = null
    media = null
    srcset = null
    sizes = null
    width = null
    height = null

    // Internal
    _width = ${this.imageSource.width() || this.width}
    _height = ${this.imageSource.height() || this.height}
    _ratio = ${this._width && this._height ? this._width / this._height : null}

    @if.hasImageSource = ${this.imageSource}
    imageSource.@process {
        width = ${this.width ? value.withWidth(this.width) : value}
        height = ${this.height ? value.withHeight(this.height) : value}
    }

    renderer = afx`
        <source
            media={props.media}
            type={props.type}
            sizes={props.sizes}
            sizes.@process.join={Type.isArray(value) ? Array.join(value, ', ') : value}
            srcset={props.srcset ? props.imageSource.srcset(props.srcset) : props.imageSource}
            srcset.@if.set={!props.lazy}
            data-srcset={props.srcset ? props.imageSource.srcset(props.srcset) : props.imageSource}
            data-srcset.@if.set={props.lazy}
            data-sizes={props.lazy && !props.sizes ? 'auto' : null}
            data-aspectratio={props.lazy ? props._ratio : null}
        />
    `
}
