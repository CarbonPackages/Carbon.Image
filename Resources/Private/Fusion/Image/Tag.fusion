prototype(Carbon.Image:Tag) < prototype(Neos.Fusion:Tag) {
  asset = false

  @if.hasImageOrBackend = ${node.context.inBackend || this.asset ? true : false}

  lightboxAsset = ${this.asset}
  alternativeText = false
  title = false
  link = false
  lightbox = false
  caption = false
  additionalClass = null
  additionalClass.@process {
    convertToString = ${Type.isArray(value) ? Array.join(value, ' ') : String.toString(value)}
    trimString = ${String.trim(value)}
  }

  preset = false
  maximumWidth = ${Configuration.setting('Carbon.Image.maximumWidth')}
  maximumHeight = ${Configuration.setting('Carbon.Image.maximumHeight')}
  width = ${Configuration.setting('Carbon.Image.width')}
  height = ${Configuration.setting('Carbon.Image.height')}
  fixedSize = false
  allowCropping = ${this.fixedSize ? true : Configuration.setting('Carbon.Image.allowCropping')}
  allowUpScaling = ${this.fixedSize ? true : Configuration.setting('Carbon.Image.allowUpScaling')}

  srcset = ${Configuration.setting('Carbon.Image.srcset')}

  dummyImageBackground = null
  dummyImageStyle = null

  dummyImageDefaultStyle = ${Configuration.setting('Carbon.Image.dummyImageStyle')}
  dummyImageArray = ${Array.concat(this.dummyImageDefaultStyle, this.dummyImageStyle)}


  @context {
    asset = ${this.asset}
    lightboxAsset = ${this.lightboxAsset}
    alternativeText = ${this.alternativeText}
    title = ${this.title}
    preset = ${this.preset}
    link = ${this.link}
    lightbox = ${this.lightbox}
    caption = ${this.caption}
    maximumWidth = ${this.maximumWidth}
    maximumHeight = ${this.maximumHeight}
    width = ${this.width}
    height = ${this.height}
    allowCropping = ${this.allowCropping}
    allowUpScaling = ${this.allowUpScaling}
    srcset = ${this.srcset}
    dummyImageArray = ${this.dummyImageArray}
    dummyImageBackground = ${this.dummyImageBackground}
    additionalClass = ${this.additionalClass}
  }

  @process {
    addLink = Carbon.Image:Link
    addLightbox = Carbon.Image:Lightbox {
      asset = ${lightboxAsset}
      @if {
        hasNoLink = ${link ? false : true}
        hasLightbox = ${lightbox ? true : false}
      }
    }
  }

  tagName = 'img'
  attributes {
    src = Neos.Fusion:Case {
      hasImage {
        condition = ${asset ? true : false}
        renderer = Carbon.Image:ImageUri
      }
      inBackend {
        condition = true
        renderer = Neos.Fusion:ResourceUri {
          path = 'resource://Carbon.Image/Public/dummy-image.svg'
        }
      }
    }
    srcset = Carbon.Image:Srcset
    class = null
    class.@process.addHandle = ${String.trim(value + (asset ? null : ' neos-handle'))}
    style = null
    style.@process.dummyImageArray = Neos.Fusion:Array {
        @if.hasNoAsset = ${!asset && Type.isArray(dummyImageArray)}
        collection = Neos.Fusion:Collection {
            collection = ${dummyImageArray}
            itemRenderer = ${itemKey + ':' + (itemKey == 'background' && dummyImageBackground ? dummyImageBackground : item) + ';'}
        }
        value = ${value}
    }
    alt = ${alternativeText ? alternativeText : false}
    title = ${asset ? (title ? title : false) : Translation.translate('chooseImage', null, [], 'NodeTypes/Image', 'Carbon.Image')}
  }
}
